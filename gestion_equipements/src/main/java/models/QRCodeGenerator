package models;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.qrcode.QRCodeWriter;

import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;

public class QRCodeGenerator {

    // Méthode pour générer l'URL du produit en fonction du nom de l'équipement
    public static String generateProductUrl(String productName) {
        // Remplacer les espaces et autres caractères spéciaux dans le nom du produit
        String formattedProductName = productName.toLowerCase().replaceAll("[^a-z0-9]", "-");

        // Générer l'URL du produit pour "made-nature.com"
        return "https://made-nature.com/products/" + formattedProductName + "?_pos=1&_sid=422aa4132&_ss=r";
    }

    // Méthode pour générer un QR Code avec la taille par défaut 200x200
    public static void generateQRCode(String data, String filePath) throws Exception {
        generateQRCode(data, filePath, 200, 200);
    }

    // Méthode pour générer un QR Code avec une taille personnalisée
    public static void generateQRCode(String data, String filePath, int width, int height) throws Exception {
        QRCodeWriter qrCodeWriter = new QRCodeWriter();
        BitMatrix bitMatrix = qrCodeWriter.encode(data, BarcodeFormat.QR_CODE, width, height);
        Path path = Paths.get(filePath);
        MatrixToImageWriter.writeToPath(bitMatrix, "PNG", path);
    }
}
